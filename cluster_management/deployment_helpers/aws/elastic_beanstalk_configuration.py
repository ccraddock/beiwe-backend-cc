# We use this to create easily readable errors for when debugging elastic beanstalk deployment configurations
class DynamicParameter(Exception): pass


#NOTE: integer values need to be strings
def get_base_eb_configuration():
    return [
        
        # Instance launch configuration details
        {
            'Namespace': 'aws:autoscaling:launchconfiguration',
            'OptionName': 'InstanceType',
            'Value': DynamicParameter("InstanceType")
        },{
            'Namespace': 'aws:autoscaling:launchconfiguration',
            'OptionName': 'IamInstanceProfile',
            'Value': DynamicParameter("IamInstanceProfile")
        },{
            'Namespace': 'aws:autoscaling:launchconfiguration',
            'OptionName': 'EC2KeyName',
            'Value': DynamicParameter("EC2KeyName")
        },
        
        # open up the ssh port for debugging - adds to the security group
        {
            'Namespace': 'aws:autoscaling:launchconfiguration',
            'OptionName': 'SSHSourceRestriction',
            'Value': 'tcp,22,22,0.0.0.0/0'
        },
    
        # cloudwatch alarms
        {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'BreachDuration',
            'Value': '1'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'EvaluationPeriods',
            'Value': '1'
        },
    
        # environment variables
        {
            'Namespace': 'aws:cloudformation:template:parameter',
            'OptionName': 'EnvironmentVariables',
            'Value': DynamicParameter("EnvironmentVariables"),
        },
        
        # },{ # could not get this to play well, so we modify it after the environment creates it.
        #     'Namespace': 'aws:autoscaling:launchconfiguration',
        #     'OptionName': 'SecurityGroups',
        #     'Value': AutogeneratedParameter("SecurityGroups")
        # },
        {
            'Namespace': 'aws:cloudformation:template:parameter',
            'OptionName': 'InstancePort',
            'Value': '80'
        },
        
        # deployment network details
        # {
        #     'Namespace': 'aws:ec2:vpc',
        #     'OptionName': 'VPCId',
        #     'Value': 'vpc-c6e16da2'
        # },
        # {
        #     'Namespace': 'aws:ec2:vpc',
        #     'OptionName': 'ELBSubnets',
        #     'Value': 'subnet-10718a66,subnet-ea9599c1,subnet-8018a9bd,subnet-bf1f02e6'
        # },
        # {
        #     'Namespace': 'aws:ec2:vpc',
        #     'OptionName': 'Subnets',
        #     'Value': 'subnet-10718a66,subnet-ea9599c1,subnet-8018a9bd,subnet-bf1f02e6'
        # },
        
        # static network details
        # {   # todo: not in a vpc?
        #     'Namespace': 'aws:ec2:vpc',
        #     'OptionName': 'AssociatePublicIpAddress',
        #     'Value': 'true'
        # },
        {
            'Namespace': 'aws:ec2:vpc',
            'OptionName': 'ELBScheme',
            'Value': 'public'
        }, {
            'Namespace': 'aws:elasticbeanstalk:application',
            'OptionName': 'Application Healthcheck URL',
            'Value': ''
        },
        # autoscaling settings
        {
            'Namespace': 'aws:autoscaling:asg',
            'OptionName': 'Availability Zones',
            'Value': 'Any'
        }, {
            'Namespace': 'aws:autoscaling:asg',
            'OptionName': 'Cooldown',
            'Value': '360'
        }, {
            'Namespace': 'aws:autoscaling:asg',
            'OptionName': 'Custom Availability Zones',
            'Value': ''
        }, {
            'Namespace': 'aws:autoscaling:asg',
            'OptionName': 'MaxSize',
            'Value': '2'
        }, {
            'Namespace': 'aws:autoscaling:asg',
            'OptionName': 'MinSize',
            'Value': '1'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'LowerBreachScaleIncrement',
            'Value': '-1'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'LowerThreshold',
            'Value': '20'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'MeasureName',
            'Value': 'CPUUtilization'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'Period',
            'Value': '1'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'Statistic',
            'Value': 'Maximum'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'Unit',
            'Value': 'Percent'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'UpperBreachScaleIncrement',
            'Value': '1'
        }, {
            'Namespace': 'aws:autoscaling:trigger',
            'OptionName': 'UpperThreshold',
            'Value': '85'
        }, {
            'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate',
            'OptionName': 'MaxBatchSize',
            'Value': '1'
        }, {
            'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate',
            'OptionName': 'MinInstancesInService',
            'Value': '1'
        },
        # {
        #     'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate',
        #     'OptionName': 'PauseTime',
        # },
        {
            'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate',
            'OptionName': 'RollingUpdateEnabled',
            'Value': 'true'
        }, {
            'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate',
            'OptionName': 'RollingUpdateType',
            'Value': 'Health'
        }, {
            'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate',
            'OptionName': 'Timeout',
            'Value': 'PT30M'
        },
        
        # Logging settings
        {
            'Namespace': 'aws:elasticbeanstalk:cloudwatch:logs',
            'OptionName': 'DeleteOnTerminate',
            'Value': 'false'
        }, {
            'Namespace': 'aws:elasticbeanstalk:cloudwatch:logs',
            'OptionName': 'RetentionInDays',
            'Value': '7'
        }, {
            'Namespace': 'aws:elasticbeanstalk:cloudwatch:logs',
            'OptionName': 'StreamLogs',
            'Value': 'false'
        },
        
        # miscellaneous EB configuration
        {
            'Namespace': 'aws:elasticbeanstalk:command',
            'OptionName': 'BatchSize',
            'Value': '30'
        }, {
            'Namespace': 'aws:elasticbeanstalk:command',
            'OptionName': 'BatchSizeType',
            'Value': 'Percentage'
        }, {
            'Namespace': 'aws:elasticbeanstalk:command',
            'OptionName': 'DeploymentPolicy',
            'Value': 'Rolling'
        }, {
            'Namespace': 'aws:elasticbeanstalk:command',
            'OptionName': 'IgnoreHealthCheck',
            'Value': 'true'
        }, { # Time at which a timeout occurs after deploying the environment - I think.
            'Namespace': 'aws:elasticbeanstalk:command',
            'OptionName': 'Timeout',
            'Value': '300'
        }, {
            'Namespace': 'aws:elasticbeanstalk:control',
            'OptionName': 'DefaultSSHPort',
            'Value': '22'
        }, {'Namespace': 'aws:elasticbeanstalk:control',
            'OptionName': 'LaunchTimeout',
            'Value': '0'
        }, {
            'Namespace': 'aws:elasticbeanstalk:control',
            'OptionName': 'LaunchType',
            'Value': 'Migration'
        }, {
            'Namespace': 'aws:elasticbeanstalk:control',
            'OptionName': 'RollbackLaunchOnFailure',
            'Value': 'false'
        },
        
        # Python environment configuration
        {
            'Namespace': 'aws:elasticbeanstalk:container:python',
            'OptionName': 'NumProcesses',
            'Value': '2'
        }, {
            'Namespace': 'aws:elasticbeanstalk:container:python',
            'OptionName': 'NumThreads',
            'Value': '20'
        }, {
            'Namespace': 'aws:elasticbeanstalk:container:python',
            'OptionName': 'StaticFiles',
            'Value': '/static/=frontend/static/'
        }, {
            'Namespace': 'aws:elasticbeanstalk:container:python',
            'OptionName': 'WSGIPath',
            'Value': 'wsgi.py'
        }, {
            'Namespace': 'aws:elasticbeanstalk:container:python:staticfiles',
            'OptionName': '/static/',
            'Value': 'frontend/static/'
        },
        
        # Elastic Beanstalk system Notifications
        {   # These settings generate the SNS instance for sending these emails.
            'Namespace': 'aws:elasticbeanstalk:sns:topics',
            'OptionName': 'Notification Endpoint',
            'Value': DynamicParameter('Notification Endpoint')
        }, {
            'Namespace': 'aws:elasticbeanstalk:sns:topics',
            'OptionName': 'Notification Protocol',
            'Value': 'email'
        },
    
        # Health check/Reporting details
        {
            'Namespace': 'aws:elasticbeanstalk:healthreporting:system',
            'OptionName': 'ConfigDocument',
            'Value': '{"Version":1,"CloudWatchMetrics":{"Instance":{"CPUIrq":null,"LoadAverage5min":null,"ApplicationRequests5xx":null,"ApplicationRequests4xx":null,"CPUUser":null,"LoadAverage1min":null,"ApplicationLatencyP50":null,"CPUIdle":null,"InstanceHealth":null,"ApplicationLatencyP95":null,"ApplicationLatencyP85":null,"RootFilesystemUtil":null,"ApplicationLatencyP90":null,"CPUSystem":null,"ApplicationLatencyP75":null,"CPUSoftirq":null,"ApplicationLatencyP10":null,"ApplicationLatencyP99":null,"ApplicationRequestsTotal":null,"ApplicationLatencyP99.9":null,"ApplicationRequests3xx":null,"ApplicationRequests2xx":null,"CPUIowait":null,"CPUNice":null},"Environment":{"InstancesSevere":null,"InstancesDegraded":null,"ApplicationRequests5xx":null,"ApplicationRequests4xx":null,"ApplicationLatencyP50":null,"ApplicationLatencyP95":null,"ApplicationLatencyP85":null,"InstancesUnknown":null,"ApplicationLatencyP90":null,"InstancesInfo":null,"InstancesPending":null,"ApplicationLatencyP75":null,"ApplicationLatencyP10":null,"ApplicationLatencyP99":null,"ApplicationRequestsTotal":null,"InstancesNoData":null,"ApplicationLatencyP99.9":null,"ApplicationRequests3xx":null,"ApplicationRequests2xx":null,"InstancesOk":null,"InstancesWarning":null}}}'
        }, {
            'Namespace': 'aws:elasticbeanstalk:healthreporting:system',
            'OptionName': 'HealthCheckSuccessThreshold',
            'Value': 'Ok'
        }, {
            'Namespace': 'aws:elasticbeanstalk:healthreporting:system',
            'OptionName': 'SystemType',
            'Value': 'enhanced'
        }, {
            'Namespace': 'aws:elasticbeanstalk:hostmanager',
            'OptionName': 'LogPublicationControl',
            'Value': 'false'
        }, {
            'Namespace': 'aws:elasticbeanstalk:managedactions',
            'OptionName': 'ManagedActionsEnabled',
            'Value': 'false'
        },  # {
        #     'Namespace': 'aws:elasticbeanstalk:managedactions',
        #     'OptionName': 'PreferredStartTime'
        # },
        {
            'Namespace': 'aws:elasticbeanstalk:managedactions:platformupdate',
            'OptionName': 'InstanceRefreshEnabled',
            'Value': 'false'
        },  # {
        #     'Namespace': 'aws:elasticbeanstalk:managedactions:platformupdate',
        #     'OptionName': 'UpdateLevel'
        # },
        {
            'Namespace': 'aws:elasticbeanstalk:monitoring',
            'OptionName': 'Automatically Terminate Unhealthy Instances',
            'Value': 'true'
        }, {
            'Namespace': 'aws:elb:healthcheck',
            'OptionName': 'HealthyThreshold',
            'Value': '3'
        }, {
            'Namespace': 'aws:elb:healthcheck',
            'OptionName': 'Interval',
            'Value': '10'
        }, {
            'Namespace': 'aws:elb:healthcheck',
            'OptionName': 'Target',
            'Value': 'TCP:80'
        }, {
            'Namespace': 'aws:elb:healthcheck',
            'OptionName': 'Timeout',
            'Value': '5'
        }, {
            'Namespace': 'aws:elb:healthcheck',
            'OptionName': 'UnhealthyThreshold',
            'Value': '5'
        },
    
        # Storage configuration.  We use the default, which is 8gb gp2.
        # {
        #     'Namespace': 'aws:autoscaling:launchconfiguration',
        #     'OptionName': 'BlockDeviceMappings',
        # }, {
        #     'Namespace': 'aws:autoscaling:launchconfiguration',
        #     'OptionName': 'MonitoringInterval',
        # }, {
        #     'Namespace': 'aws:autoscaling:launchconfiguration',
        #     'OptionName': 'RootVolumeIOPS',
        # }, {
        #     'Namespace': 'aws:autoscaling:launchconfiguration',
        #     'OptionName': 'RootVolumeSize',
        # },{
        #     'Namespace': 'aws:autoscaling:launchconfiguration',
        #     'OptionName': 'RootVolumeType',
        # },
        
        
        ##
        ##   Elastic Load Balancer configuration
        ##
        {
            'Namespace': 'aws:elasticbeanstalk:environment',
            'OptionName': 'EnvironmentType',
            'Value': 'LoadBalanced'
        }, {  # there are 2 ELBs, ELB classic and ELBv2. We use classic.
            'Namespace': 'aws:elasticbeanstalk:environment',
            'OptionName': 'LoadBalancerType',
            'Value': 'classic'
        }, {
            'Namespace': 'aws:elasticbeanstalk:environment',
            'OptionName': 'ServiceRole',
            'Value': DynamicParameter("ServiceRole")
        },# {
        #     'Namespace': 'aws:elasticbeanstalk:environment',
        #     'OptionName': 'ExternalExtensionsS3Bucket'
        # }, {
        #     'Namespace': 'aws:elasticbeanstalk:environment',
        #     'OptionName': 'ExternalExtensionsS3Key'
        # },{ # probably don't override this one, use the one it autogenerates and then modify
        #     'Namespace': 'aws:elb:loadbalancer',
        #     'OptionName': 'SecurityGroups',
        #     'Value': 'sg-********'
        # },{
        #     'Namespace': 'aws:elb:listener:80',
        #     'OptionName': 'InstancePort',
        #     'Value': '80'
        # }, {
        #     'Namespace': 'aws:elb:listener:80',
        #     'OptionName': 'InstanceProtocol',
        #     'Value': 'HTTP'
        # }, {
        #     'Namespace': 'aws:elb:listener:80',
        #     'OptionName': 'ListenerEnabled',
        #     'Value': 'true'
        # }, {
        #     'Namespace': 'aws:elb:listener:80',
        #     'OptionName': 'ListenerProtocol',
        #     'Value': 'HTTP'
        # }, {
        #     'Namespace': 'aws:elb:listener:80',
        #     'OptionName': 'PolicyNames',
        # }, {
        #     'Namespace': 'aws:elb:listener:80',
        #     'OptionName': 'SSLCertificateId',
        # }, {
        #     'Namespace': 'aws:elb:loadbalancer',
        #     'OptionName': 'CrossZone',
        #     'Value': 'true'
        # }, {
        #     'Namespace': 'aws:elb:loadbalancer',
        #     'OptionName': 'LoadBalancerHTTPPort',
        #     'Value': '80'
        # }, {
        #     'Namespace': 'aws:elb:loadbalancer',
        #     'OptionName': 'LoadBalancerHTTPSPort',
        #     'Value': 'OFF'
        # }, {
        #     'Namespace': 'aws:elb:loadbalancer',
        #     'OptionName': 'LoadBalancerPortProtocol',
        #     'Value': 'HTTP'
        # }, {
        #     'Namespace': 'aws:elb:loadbalancer',
        #     'OptionName': 'LoadBalancerSSLPortProtocol',
        #     'Value': 'HTTPS'
        # }, {
        #     'Namespace': 'aws:elb:loadbalancer',
        #     'OptionName': 'SSLCertificateId',
        # }, {
        #     'Namespace': 'aws:elb:policies',
        #     'OptionName': 'ConnectionDrainingEnabled',
        #     'Value': 'true'
        # }, {
        #     'Namespace': 'aws:elb:policies',
        #     'OptionName': 'ConnectionDrainingTimeout',
        #     'Value': '20'
        # }, {
        #     'Namespace': 'aws:elb:policies',
        #     'OptionName': 'ConnectionSettingIdleTimeout',
        #     'Value': '60'
        # },
    ]
